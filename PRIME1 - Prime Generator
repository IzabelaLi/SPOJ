/******************************************************************************

Peter wants to generate some prime numbers for his cryptosystem. Help him! Your task is to generate all prime numbers between two given numbers!

Input
The input begins with the number t of test cases in a single line (t<=10). In each of the next t lines there are two numbers m and n (1 <= m <= n <= 1000000000, n-m<=100000) separated by a space.

Output
For every test case print all prime numbers p such that m <= p <= n, one number per line, test cases separated by an empty line.

Example
Input:
2
1 10
3 5

Output:
2
3
5
7

3
5

*******************************************************************************/

#include <iostream>
#include <math.h>

using namespace std;

short t = 0;
unsigned long m = 0;
unsigned long n = 0;
    
unsigned long tablica_m[10];
unsigned long tablica_n[10];

void Wczytaj_liczby()
{
    //cout<< "Podaj t: "; 
    cin>>t;
    
    for (short i = 0; i<t; i++)
    {
        //cout<< "Podaj m: "; 
        cin>>tablica_m[i];
        //cout<< "Podaj n: "; 
        cin>>tablica_n[i];
    }
}

void Sito_Eratostenesa(unsigned long m, unsigned long n)
{
    unsigned long n_pierw = sqrt(n);
    unsigned long tablica[n];
    
    for (unsigned long i=0; i<n; i++)
    {
        tablica[i]=i+1;
    }
    
    for (unsigned long k=1; k<n_pierw; k++)
    {
        for (unsigned long j=k+1; j<n; j++)
        {
            if ((tablica[k]!=0)&&(tablica[j]!=0))
            {
                if (tablica[j]%tablica[k]==0)
                {
                     tablica[j]=0;
                }
            }
        }
    }
    
    unsigned long index = 0;
    for (unsigned long i = 0; i<n; i++)
    {
        if ((tablica[i]>=m)&&(tablica[i]!=1))
        {
            cout<<tablica[i]<<endl;
        }
    }
}

int main()
{
    Wczytaj_liczby();

    for (short i = 0; i<t; i++)
    {
        Sito_Eratostenesa(tablica_m[i], tablica_n[i]);

        cout<<endl;
    }
    
    return 0;
}
